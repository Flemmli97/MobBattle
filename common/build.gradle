dependencies {
    // We depend on fabric loader here to use the fabric @Environment annotations and get the mixin dependencies
    // Do NOT use other classes from fabric loader
    modImplementation "net.fabricmc:fabric-loader:${rootProject.loader_version}"
}

architectury {
    common()
}

repositories {
    mavenLocal()
    maven {
        name = "TenshiLib"
        url "https://gitlab.com/api/v4/projects/21830712/packages/maven"
    }
}

dependencies {
    modCompileOnly "io.github.flemmli97:tenshilib:${tenshilib_version}:fabric"
}

sourceSets.main.resources {
    srcDir "src/generated/resources"
}

processResources {
    exclude '.cache'
}


publishing {
    publications {
        mavenJava(MavenPublication) {
            // add all the jars that should be included when publishing to maven
            artifact(jar) {
                classifier null
                builtBy jar
            }
            artifact(sourcesJar) {
                classifier "sources"
                builtBy remapSourcesJar
            }
            artifactId project.archives_base_name
            version project.version + "-common"
        }
    }

    repositories {
        maven {
            url "https://gitlab.com/api/v4/projects/21830712/packages/maven"
            //url "https://maven.pkg.github.com/flemmli97/<>"
            credentials {
                username = project.findProperty("gpr.user") ?: System.getenv("GPR_USER")
                password = project.findProperty("gpr.gitlab.token") ?: System.getenv("GPR_GITLAB_TOKEN")
                //password = project.findProperty("gpr.github.token") ?: System.getenv("GPR_TOKEN")
            }
        }
    }
}
